From 363deb1145453f443250078f5db7472500593d88 Mon Sep 17 00:00:00 2001
From: Christophe Priouzeau <christophe.priouzeau@foss.st.com>
Date: Fri, 8 Sep 2023 13:34:00 +0200
Subject: [PATCH 4/4] Revert "compositor: set transform.opaque for surfaces 
 without alpha channel"

This reverts commit e2426960d479a84ad66ee865404a925d66d9a55b.
Upstream-Status: Pending
---
 libweston/compositor.c | 46 +++++++++++++++++-------------------------
 1 file changed, 18 insertions(+), 28 deletions(-)

diff --git a/libweston/compositor.c b/libweston/compositor.c
index ba5ed5d..8575bdd 100644
--- a/libweston/compositor.c
+++ b/libweston/compositor.c
@@ -1366,20 +1366,15 @@ weston_view_update_transform_disable(struct weston_view *view)
 				  view->geometry.pos_offset.y);
 
 	if (view->alpha == 1.0) {
-		if (view->surface->is_opaque) {
-			pixman_region32_copy(&view->transform.opaque,
-					     &view->transform.boundingbox);
-		} else {
-			pixman_region32_copy(&view->transform.opaque,
-					     &view->surface->opaque);
-			if (view->geometry.scissor_enabled)
-				pixman_region32_intersect(&view->transform.opaque,
-							  &view->transform.opaque,
-							  &view->geometry.scissor);
-			pixman_region32_translate(&view->transform.opaque,
-						  view->geometry.pos_offset.x,
-						  view->geometry.pos_offset.y);
-		}
+		pixman_region32_copy(&view->transform.opaque,
+				     &view->surface->opaque);
+		if (view->geometry.scissor_enabled)
+			pixman_region32_intersect(&view->transform.opaque,
+						  &view->transform.opaque,
+						  &view->geometry.scissor);
+		pixman_region32_translate(&view->transform.opaque,
+					  view->geometry.pos_offset.x,
+					  view->geometry.pos_offset.y);
 	}
 }
 
@@ -1426,20 +1421,15 @@ weston_view_update_transform_enable(struct weston_view *view)
 
 	if (view->alpha == 1.0 &&
 	    matrix->type == WESTON_MATRIX_TRANSFORM_TRANSLATE) {
-		if (view->surface->is_opaque) {
-			pixman_region32_copy(&view->transform.opaque,
-					     &view->transform.boundingbox);
-		} else {
-			pixman_region32_copy(&view->transform.opaque,
-					     &view->surface->opaque);
-			if (view->geometry.scissor_enabled)
-				pixman_region32_intersect(&view->transform.opaque,
-							  &view->transform.opaque,
-							  &view->geometry.scissor);
-			pixman_region32_translate(&view->transform.opaque,
-						  matrix->d[12],
-						  matrix->d[13]);
-		}
+		pixman_region32_copy(&view->transform.opaque,
+				     &view->surface->opaque);
+		if (view->geometry.scissor_enabled)
+			pixman_region32_intersect(&view->transform.opaque,
+						  &view->transform.opaque,
+						  &view->geometry.scissor);
+		pixman_region32_translate(&view->transform.opaque,
+					  matrix->d[12],
+					  matrix->d[13]);
 	}
 
 	return 0;
-- 
2.34.1

